'''На прошлой неделе мы сжимали строки, используя кодирование повторов.
Теперь нашей задачей будет восстановление исходной строки обратно.

Напишите программу, которая считывает из файла строку, соответствующую тексту,
сжатому с помощью кодирования повторов, и производит обратную операцию,
получая исходный текст.

Запишите полученный текст в файл и прикрепите его, как ответ на это задание.

В исходном тексте не встречаются цифры, так что код однозначно интерпретируем.

Примечание. Это первое задание типа Dataset Quiz. В таких заданиях после
нажатия "Start Quiz" у вас появляется ссылка "download your dataset".
Используйте эту ссылку для того, чтобы загрузить файл со входными данными к
себе на компьютер. Запустите вашу программу, используя этот файл в качестве
входных данных. Выходной файл, который при этом у вас получится, надо
отправить в качестве ответа на эту задачу. '''

def rasshif(a):
    '''Функция расшифрует файл'''
    
    i = 0       # счетчик
    word = ''   # набор символов
    count = ''  # их количество
    tex = ''    # выводимый текст
    
    num = ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9') # кортеж цифр

    # Перебор символов, что быстрее цикл while или for?
    while i < len(a):

        # Если символ буква и количества ее повторений нет, то
        # "слово" ещё до конца не записано
        if a[i] not in num and count == '':

        # собственно запись "слова"
            word += a[i]
            i += 1
            w = word

        # если цифра, то формируем число
        elif a[i] in num:
            
            count += a[i]
            i += 1
            c = count
            
        # если снова пошла буква, а цифры известны, то текущее "слово"
        # стало известно, запишем его
        else:
            tex += word * int(count)
            count = ''
            word = ''
            
    '''Я, конечно, понимаю, что это костыль, и обещаю когда-нибудь его убрать
    Смысл в том, что мой интерпретатор отказывается после цикла исполнять
    такую строку:
    
    tex += word * int(count)

    ссылаясь на то, что invalid literal for int() with base 10: '' '''
    
    tex += w * int(c)    
    
    return tex

#        
name = input()

#
with open(name, 'r') as t:
    text = t.read()
    
#
answer = rasshif(text)

#
with open('расшифровка.txt', 'w') as outfile:
    outfile.write(answer)
